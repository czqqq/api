<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.api.dao.WithdrawDao">
  
  <resultMap id="BaseResultMap" type="com.api.model.Withdraw">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="name" jdbcType="VARCHAR" property="name" />
  </resultMap>
  
  <sql id="BaseColumnList">
    id, user_id, type, mobile, account, money, status, name
  </sql>
  
  <insert id="insert" parameterType="com.api.model.Withdraw">
    INSERT INTO withdraw (id, user_id, type, 
      mobile, account, money, 
      status, name)
    VALUES (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{type,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, #{money,jdbcType=DOUBLE}, 
      #{status,jdbcType=TINYINT}, #{name,jdbcType=VARCHAR})
  </insert>
  
  <insert id="insertBatch" parameterType="java.util.List">
    INSERT INTO withdraw (id, 
      user_id, type, mobile, 
      account, money, status, 
      name)
    VALUES <foreach collection="list" index="index" item="item" separator=","> (#{item.id,jdbcType=BIGINT}, 
      #{item.userId,jdbcType=BIGINT}, #{item.type,jdbcType=VARCHAR}, #{item.mobile,jdbcType=VARCHAR}, 
      #{item.account,jdbcType=VARCHAR}, #{item.money,jdbcType=DOUBLE}, #{item.status,jdbcType=TINYINT}, 
      #{item.name,jdbcType=VARCHAR}) </foreach>
  </insert>
  
  <insert id="insertSelective" parameterType="com.api.model.Withdraw">
    INSERT INTO withdraw
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="name != null">
        name,
      </if>
    </trim>
    <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <delete id="deleteById" parameterType="java.lang.Long">
    DELETE FROM withdraw
    WHERE id = #{id,jdbcType=BIGINT}
  </delete>
  
  <update id="update" parameterType="com.api.model.Withdraw">
    UPDATE withdraw
    SET user_id = #{userId,jdbcType=BIGINT},
      type = #{type,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      money = #{money,jdbcType=DOUBLE},
      status = #{status,jdbcType=TINYINT},
      name = #{name,jdbcType=VARCHAR}
    WHERE id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateSelective" parameterType="com.api.model.Withdraw">
    UPDATE withdraw
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
    </set>
    WHERE id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    SELECT 
    <include refid="BaseColumnList" />
    FROM withdraw
    WHERE id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="selectByIds" resultMap="BaseResultMap">
    SELECT 
    <include refid="BaseColumnList" />
    FROM withdraw
    WHERE id IN <foreach close=")" collection="list" item="item" open="(" separator=","> #{item}  </foreach> 
  </select>
  
  <select id="selectByEntity" parameterType="com.api.model.Withdraw" resultMap="BaseResultMap">
    SELECT 
    <include refid="BaseColumnList" />
    FROM withdraw
    <where>
      <if test="userId != null">
         AND user_id = #{userId,jdbcType=BIGINT}
      </if>
      <if test="type != null">
         AND type = #{type,jdbcType=VARCHAR}
      </if>
      <if test="mobile != null">
         AND mobile = #{mobile,jdbcType=VARCHAR}
      </if>
      <if test="account != null">
         AND account = #{account,jdbcType=VARCHAR}
      </if>
      <if test="money != null">
         AND money = #{money,jdbcType=DOUBLE}
      </if>
      <if test="status != null">
         AND status = #{status,jdbcType=TINYINT}
      </if>
      <if test="name != null">
         AND name = #{name,jdbcType=VARCHAR}
      </if>
    </where>
    <if test="orderBy != null">
      ORDER BY ${orderBy}
    </if>
  </select>
  
  <select id="countByEntity" parameterType="com.api.model.Withdraw" resultType="java.lang.Integer">
    SELECT COUNT(1) FROM withdraw
    <where>
      <if test="userId != null">
         AND user_id = #{userId,jdbcType=BIGINT}
      </if>
      <if test="type != null">
         AND type = #{type,jdbcType=VARCHAR}
      </if>
      <if test="mobile != null">
         AND mobile = #{mobile,jdbcType=VARCHAR}
      </if>
      <if test="account != null">
         AND account = #{account,jdbcType=VARCHAR}
      </if>
      <if test="money != null">
         AND money = #{money,jdbcType=DOUBLE}
      </if>
      <if test="status != null">
         AND status = #{status,jdbcType=TINYINT}
      </if>
      <if test="name != null">
         AND name = #{name,jdbcType=VARCHAR}
      </if>
    </where>
  </select>
  
  <!-- 以下部分人工添加或修改 -->

  <resultMap id="ExtResultMap" type="com.api.model.vo.WithdrawVo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
  </resultMap>


  <select id="fetchWithdrawList" resultMap="ExtResultMap">
    SELECT
    w.* , u.name user_name
    FROM withdraw w left join `user` u on w.user_id = u.id
    where w.status = 0
  </select>

  <select id="fetchWithdrawByUid" parameterType="long" resultMap="ExtResultMap">
    SELECT
    w.* , u.name user_name
    FROM withdraw w left join `user` u on w.user_id = u.id
    where w.status = 0
    and user_id = #{userId,jdbcType=BIGINT}
  </select>

  <select id="fetchProfit" parameterType="long" resultType="double">
    select count(*) from withdraw
    where  status = 1
    and user_id = #{userId,jdbcType=BIGINT}

  </select>


</mapper>