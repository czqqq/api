<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.api.dao.OrderDao" >
  
  <resultMap id="BaseResultMap" type="com.api.model.Order" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="total_price" property="totalPrice" jdbcType="DOUBLE" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="ct" property="ct" jdbcType="TIMESTAMP" />
    <result column="mt" property="mt" jdbcType="TIMESTAMP" />
    <result column="rec_name" property="recName" jdbcType="VARCHAR" />
    <result column="rec_address" property="recAddress" jdbcType="VARCHAR" />
    <result column="rec_mobile" property="recMobile" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="trade_number" property="tradeNumber" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>

  <resultMap id="BaseResultVoMap" type="com.api.model.vo.OrderVo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="total_price" property="totalPrice" jdbcType="DOUBLE" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="ct" property="ct" jdbcType="TIMESTAMP" />
    <result column="mt" property="mt" jdbcType="TIMESTAMP" />
    <result column="rec_name" property="recName" jdbcType="VARCHAR" />
    <result column="rec_address" property="recAddress" jdbcType="VARCHAR" />
    <result column="rec_mobile" property="recMobile" jdbcType="VARCHAR" />
    <result column="code" property="orderCode" jdbcType="VARCHAR" />
    <result column="trade_number" property="tradeNumber" jdbcType="VARCHAR" />
    <result column="name" property="userName" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="BaseColumnList" >
    id, user_id, total_price, status, ct, mt, rec_name, rec_address, rec_mobile, code, 
    trade_number,remark
  </sql>

  <sql id="BaseJoinColumnList" >
    a.id, a.user_id, a.total_price, a.status, a.ct, a.mt, a.rec_name, a.rec_address, a.rec_mobile, a.code,
    a.trade_number,b.name,b.mobile,a.remark
  </sql>
  
  <insert id="insert" parameterType="com.api.model.Order"  keyProperty="id" useGeneratedKeys="true">
    INSERT INTO `order` (id, user_id, total_price,
      status, ct, mt, rec_name, rec_address, rec_mobile,
      code, trade_number,remark)
    VALUES (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{totalPrice,jdbcType=DOUBLE}, 
      #{status,jdbcType=TINYINT}, #{ct,jdbcType=TIMESTAMP}, #{mt,jdbcType=TIMESTAMP}, 
      #{recName,jdbcType=VARCHAR}, #{recAddress,jdbcType=VARCHAR}, #{recMobile,jdbcType=VARCHAR}, 
      gennerate_no(12,'O'), #{tradeNumber,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  
  <insert id="insertBatch" parameterType="java.util.List" >
    INSERT INTO `order` (id,
      user_id, total_price, status, 
      ct, mt, rec_name, 
      rec_address, rec_mobile, code, 
      trade_number,remark)
    VALUES <foreach collection="list" item="item" index="index" separator=","> (#{item.id,jdbcType=BIGINT}, 
      #{item.userId,jdbcType=BIGINT}, #{item.totalPrice,jdbcType=DOUBLE}, #{item.status,jdbcType=TINYINT}, 
      #{item.ct,jdbcType=TIMESTAMP}, #{item.mt,jdbcType=TIMESTAMP}, #{item.recName,jdbcType=VARCHAR}, 
      #{item.recAddress,jdbcType=VARCHAR}, #{item.recMobile,jdbcType=VARCHAR}, #{item.code,jdbcType=VARCHAR}, 
      #{item.tradeNumber,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}) </foreach>
  </insert>
  
  <insert id="insertSelective" parameterType="com.api.model.Order" keyProperty="id" useGeneratedKeys="true">
    INSERT INTO `order`
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="totalPrice != null" >
        total_price,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="ct != null" >
        ct,
      </if>
      <if test="mt != null" >
        mt,
      </if>
      <if test="recName != null" >
        rec_name,
      </if>
      <if test="recAddress != null" >
        rec_address,
      </if>
      <if test="recMobile != null" >
        rec_mobile,
      </if>
      code,
      <if test="tradeNumber != null" >
        trade_number,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="VALUES (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="totalPrice != null" >
        #{totalPrice,jdbcType=DOUBLE},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="ct != null" >
        #{ct,jdbcType=TIMESTAMP},
      </if>
      <if test="mt != null" >
        #{mt,jdbcType=TIMESTAMP},
      </if>
      <if test="recName != null" >
        #{recName,jdbcType=VARCHAR},
      </if>
      <if test="recAddress != null" >
        #{recAddress,jdbcType=VARCHAR},
      </if>
      <if test="recMobile != null" >
        #{recMobile,jdbcType=VARCHAR},
      </if>
      gennerate_no(12,'O'),
      <if test="tradeNumber != null" >
        #{tradeNumber,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <delete id="deleteById" parameterType="java.lang.Long" >
    DELETE FROM  `order`
    WHERE id = #{id,jdbcType=BIGINT}
  </delete>
  
  <update id="update" parameterType="com.api.model.Order" >
    UPDATE `order`
    SET user_id = #{userId,jdbcType=BIGINT},
      total_price = #{totalPrice,jdbcType=DOUBLE},
      status = #{status,jdbcType=TINYINT},
      ct = #{ct,jdbcType=TIMESTAMP},
      mt = #{mt,jdbcType=TIMESTAMP},
      rec_name = #{recName,jdbcType=VARCHAR},
      rec_address = #{recAddress,jdbcType=VARCHAR},
      rec_mobile = #{recMobile,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      trade_number = #{tradeNumber,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    WHERE id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateSelective" parameterType="com.api.model.Order" >
    UPDATE `order`
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="totalPrice != null" >
        total_price = #{totalPrice,jdbcType=DOUBLE},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="ct != null" >
        ct = #{ct,jdbcType=TIMESTAMP},
      </if>
      <if test="mt != null" >
        mt = #{mt,jdbcType=TIMESTAMP},
      </if>
      <if test="recName != null" >
        rec_name = #{recName,jdbcType=VARCHAR},
      </if>
      <if test="recAddress != null" >
        rec_address = #{recAddress,jdbcType=VARCHAR},
      </if>
      <if test="recMobile != null" >
        rec_mobile = #{recMobile,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="tradeNumber != null" >
        trade_number = #{tradeNumber,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    WHERE id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    SELECT 
    <include refid="BaseColumnList" />
    FROM `order`
    WHERE id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="selectByIds" resultMap="BaseResultMap" >
    SELECT 
    <include refid="BaseColumnList" />
    FROM `order`
    WHERE id IN <foreach collection="list" item="item" open="(" separator="," close=")"> #{item}  </foreach> 
  </select>

  
  <select id="countByEntity" parameterType="com.api.model.Order" resultType="java.lang.Integer" >
    SELECT COUNT(1) FROM `order`
    <where >
      <if test="id != null" >
        AND id = #{id,jdbcType=BIGINT}
      </if>
      <if test="userId != null" >
         AND user_id = #{userId,jdbcType=BIGINT}
      </if>
      <if test="totalPrice != null" >
         AND total_price = #{totalPrice,jdbcType=DOUBLE}
      </if>
      <if test="status != null" >
         AND status = #{status,jdbcType=TINYINT}
      </if>
      <if test="ct != null" >
         AND ct = #{ct,jdbcType=TIMESTAMP}
      </if>
      <if test="mt != null" >
         AND mt = #{mt,jdbcType=TIMESTAMP}
      </if>
      <if test="recName != null" >
         AND rec_name = #{recName,jdbcType=VARCHAR}
      </if>
      <if test="recAddress != null" >
         AND rec_address = #{recAddress,jdbcType=VARCHAR}
      </if>
      <if test="recMobile != null" >
         AND rec_mobile = #{recMobile,jdbcType=VARCHAR}
      </if>
      <if test="code != null" >
         AND code = #{code,jdbcType=VARCHAR}
      </if>
      <if test="tradeNumber != null" >
         AND trade_number = #{tradeNumber,jdbcType=VARCHAR}
      </if>
    </where>
  </select>
  
  <!-- 以下部分人工添加或修改 -->
  <select id="selectJoinByEntity" parameterType="com.api.model.Order" resultMap="BaseResultVoMap" >
    SELECT
    <include refid="BaseJoinColumnList" />
    FROM `order` a
    INNER JOIN `user` b on b.id = a.user_id
    <where >
      <if test="id != null" >
        AND a.id = #{id,jdbcType=BIGINT}
      </if>
      <if test="userId != null" >
        AND a.user_id = #{userId,jdbcType=BIGINT}
      </if>
      <if test="totalPrice != null" >
        AND a.total_price = #{totalPrice,jdbcType=DOUBLE}
      </if>
      <if test="status != null" >
        AND a.status = #{status,jdbcType=TINYINT}
      </if>
      <if test="ct != null" >
        AND a.ct = #{ct,jdbcType=TIMESTAMP}
      </if>
      <if test="mt != null" >
        AND a.mt = #{mt,jdbcType=TIMESTAMP}
      </if>
      <if test="recName != null" >
        AND a.rec_name = #{recName,jdbcType=VARCHAR}
      </if>
      <if test="recAddress != null" >
        AND a.rec_address = #{recAddress,jdbcType=VARCHAR}
      </if>
      <if test="recMobile != null" >
        AND a.rec_mobile = #{recMobile,jdbcType=VARCHAR}
      </if>
      <if test="code != null" >
        AND a.code = #{code,jdbcType=VARCHAR}
      </if>
      <if test="tradeNumber != null" >
        AND a.trade_number = #{tradeNumber,jdbcType=VARCHAR}
      </if>
      and status != 0
    </where>
    order by a.ct desc
  </select>
  <select id="getEntityByCode" parameterType="com.api.model.Order" resultMap="BaseResultVoMap" >
    SELECT
    <include refid="BaseJoinColumnList" />
    FROM `order` a
    INNER JOIN `user` b on b.id = a.user_id
    <where >
      <if test="id != null" >
        AND a.id = #{id,jdbcType=BIGINT}
      </if>
      <if test="userId != null" >
        AND a.user_id = #{userId,jdbcType=BIGINT}
      </if>
      <if test="totalPrice != null" >
        AND a.total_price = #{totalPrice,jdbcType=DOUBLE}
      </if>
      <if test="status != null" >
        AND a.status = #{status,jdbcType=TINYINT}
      </if>
      <if test="ct != null" >
        AND a.ct = #{ct,jdbcType=TIMESTAMP}
      </if>
      <if test="mt != null" >
        AND a.mt = #{mt,jdbcType=TIMESTAMP}
      </if>
      <if test="recName != null" >
        AND a.rec_name = #{recName,jdbcType=VARCHAR}
      </if>
      <if test="recAddress != null" >
        AND a.rec_address = #{recAddress,jdbcType=VARCHAR}
      </if>
      <if test="recMobile != null" >
        AND a.rec_mobile = #{recMobile,jdbcType=VARCHAR}
      </if>
      <if test="code != null" >
        AND a.code = #{code,jdbcType=VARCHAR}
      </if>
      <if test="tradeNumber != null" >
        AND a.trade_number = #{tradeNumber,jdbcType=VARCHAR}
      </if>
    </where>
    order by a.ct desc
  </select>
  <update id="updateSelectiveByOrderId" parameterType="com.api.model.Order" >
    UPDATE `order`
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="totalPrice != null" >
        total_price = #{totalPrice,jdbcType=DOUBLE},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="ct != null" >
        ct = #{ct,jdbcType=TIMESTAMP},
      </if>
      <if test="mt != null" >
        mt = #{mt,jdbcType=TIMESTAMP},
      </if>
      <if test="recName != null" >
        rec_name = #{recName,jdbcType=VARCHAR},
      </if>
      <if test="recAddress != null" >
        rec_address = #{recAddress,jdbcType=VARCHAR},
      </if>
      <if test="recMobile != null" >
        rec_mobile = #{recMobile,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="tradeNumber != null" >
        trade_number = #{tradeNumber,jdbcType=VARCHAR},
      </if>
    </set>
    WHERE order_id = #{orderId,jdbcType=BIGINT}
  </update>


  <select id="selectByEntity" parameterType="com.api.model.Order" resultMap="BaseResultMap" >
    SELECT
    <include refid="BaseColumnList" />
    FROM `order`
    <where >
      <if test="id != null" >
        AND id = #{id,jdbcType=BIGINT}
      </if>
      <if test="userId != null" >
        AND user_id = #{userId,jdbcType=BIGINT}
      </if>
      <if test="totalPrice != null" >
        AND total_price = #{totalPrice,jdbcType=DOUBLE}
      </if>
      <if test="status != null" >
        AND status = #{status,jdbcType=TINYINT}
      </if>
      <if test="ct != null" >
        AND ct = #{ct,jdbcType=TIMESTAMP}
      </if>
      <if test="mt != null" >
        AND mt = #{mt,jdbcType=TIMESTAMP}
      </if>
      <if test="recName != null" >
        AND rec_name = #{recName,jdbcType=VARCHAR}
      </if>
      <if test="recAddress != null" >
        AND rec_address = #{recAddress,jdbcType=VARCHAR}
      </if>
      <if test="recMobile != null" >
        AND rec_mobile = #{recMobile,jdbcType=VARCHAR}
      </if>
      <if test="code != null" >
        AND code = #{code,jdbcType=VARCHAR}
      </if>
      <if test="tradeNumber != null" >
        AND trade_number = #{tradeNumber,jdbcType=VARCHAR}
      </if>
    </where>
    order by ct desc
  </select>

  <select id="fetchAllInput" resultType="double">
    select sum(total_price)
    from `order`
    where status = 1
  </select>
</mapper>